// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repository.EF;

#nullable disable

namespace Fast_Teste.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Business.Models.Conferente", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("login")
                        .IsRequired()
                        .HasColumnType("varchar(64)");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("varchar(128)");

                    b.Property<string>("senha")
                        .IsRequired()
                        .HasColumnType("varchar(64)");

                    b.HasKey("id");

                    b.ToTable("Conferente", (string)null);
                });

            modelBuilder.Entity("Business.Models.Entrega", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("conferenteID")
                        .HasColumnType("int");

                    b.Property<string>("descricao")
                        .HasColumnType("varchar(128)");

                    b.Property<string>("endereco")
                        .IsRequired()
                        .HasColumnType("varchar(128)");

                    b.Property<int>("entregadorID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("fim")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("inicio")
                        .HasColumnType("datetime");

                    b.Property<int>("produtoentregaid")
                        .HasColumnType("int");

                    b.Property<double>("valor")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.HasIndex("conferenteID");

                    b.HasIndex("entregadorID");

                    b.HasIndex("produtoentregaid");

                    b.ToTable("Entrega", (string)null);
                });

            modelBuilder.Entity("Business.Models.Entregador", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("login")
                        .IsRequired()
                        .HasColumnType("varchar(64)");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("varchar(128)");

                    b.Property<string>("senha")
                        .IsRequired()
                        .HasColumnType("varchar(64)");

                    b.HasKey("id");

                    b.ToTable("Entregador", (string)null);
                });

            modelBuilder.Entity("Business.Models.Produto", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("varchar(128)");

                    b.Property<int>("produtoentregaid")
                        .HasColumnType("int");

                    b.Property<double>("teste")
                        .HasColumnType("float");

                    b.Property<double>("valor")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.HasIndex("produtoentregaid");

                    b.ToTable("Produto", (string)null);
                });

            modelBuilder.Entity("Business.Models.ProdutoEntrega", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("quantidade")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("ProdutoEntrega", (string)null);
                });

            modelBuilder.Entity("Business.Models.Entrega", b =>
                {
                    b.HasOne("Business.Models.Conferente", "conferente")
                        .WithMany()
                        .HasForeignKey("conferenteID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Business.Models.Entregador", "entregador")
                        .WithMany()
                        .HasForeignKey("entregadorID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Business.Models.ProdutoEntrega", "produtoentrega")
                        .WithMany("entregas")
                        .HasForeignKey("produtoentregaid")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("conferente");

                    b.Navigation("entregador");

                    b.Navigation("produtoentrega");
                });

            modelBuilder.Entity("Business.Models.Produto", b =>
                {
                    b.HasOne("Business.Models.ProdutoEntrega", "produtoentrega")
                        .WithMany("produtos")
                        .HasForeignKey("produtoentregaid")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("produtoentrega");
                });

            modelBuilder.Entity("Business.Models.ProdutoEntrega", b =>
                {
                    b.Navigation("entregas");

                    b.Navigation("produtos");
                });
#pragma warning restore 612, 618
        }
    }
}
